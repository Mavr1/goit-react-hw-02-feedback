{"version":3,"sources":["components/section/Section.js","components/notification/Notification.js","components/statistics/Statistics.js","components/button/Button.js","components/feedbackOptions/FeedbackOptions.js","components/feedback/Feedback.js","App.js","index.js"],"names":["Section","name","children","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","Button","onVote","className","type","onClick","FeedbackOptions","buttonsName","map","item","key","defaultProps","Feedback","App","state","setState","prevState","this","Math","round","isNaN","Component","ReactDOM","render","document","getElementById"],"mappings":"gPASeA,EAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,SAAT,OACd,iCACE,4BAAKD,GACJC,ICDUC,EAFM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,2BAAIA,ICkB3BC,EAhBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,kBAAC,EAAD,CAAST,KAAK,cACXQ,EAAQ,EACP,6BACE,oCAAUH,GACV,uCAAaC,GACb,mCAASC,GACT,qCAAWC,GACX,iDAAuBC,IAGzB,kBAAC,EAAD,CAAcN,QAAS,wBCPdO,EANA,SAAC,GAAD,IAAGV,EAAH,EAAGA,KAAMW,EAAT,EAASA,OAAT,OACb,4BAAQC,UAAU,aAAaC,KAAK,SAASC,QAAS,kBAAMH,EAAOX,KAChEA,ICDCe,EAAkB,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,YAAaL,EAAa,EAAbA,OACtC,OACE,yBAAKC,UAAU,oBACZI,EAAYC,KAAI,SAACC,GAAD,OACf,kBAAC,EAAD,CAAQC,IAAKD,EAAMlB,KAAMkB,EAAMP,OAAQA,SAM/CI,EAAgBK,aAAe,CAC7BJ,YAAa,IAGAD,QCPAM,EANE,SAAC,GAAD,IAAGL,EAAH,EAAGA,YAAaL,EAAhB,EAAgBA,OAAhB,OACf,kBAAC,EAAD,CAASX,KAAK,yBACZ,kBAAC,EAAD,CAAiBgB,YAAaA,EAAaL,OAAQA,MCDjDK,G,MAAc,CAAC,OAAQ,UAAW,QAyCzBM,E,4MAtCbC,MAAQ,CACNlB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPI,OAAS,SAACX,GAAD,OACP,EAAKwB,UAAS,SAACC,GACb,OAAO,eAAGzB,EAAOyB,EAAUzB,GAAQ,O,uDAIrC,IAAIQ,EAAQ,EACZ,IAAK,IAAIW,KAAOO,KAAKH,MACnBf,GAAgBkB,KAAKH,MAAMJ,GAG7B,IAAMV,EAAqBkB,KAAKC,MAAOF,KAAKH,MAAMlB,KAAOG,EAAS,KAElE,OACE,yBAAKI,UAAU,aACb,yBAAKA,UAAU,YACb,kBAAC,EAAD,CAAUI,YAAaA,EAAaL,OAAQe,KAAKf,SACjD,kBAAC,EAAD,CACEN,KAAMqB,KAAKH,MAAMlB,KACjBC,QAASoB,KAAKH,MAAMjB,QACpBC,IAAKmB,KAAKH,MAAMhB,IAChBC,MAAOA,EACPC,mBACEoB,MAAMpB,GAAsB,IAA5B,UAAqCA,EAArC,a,GA9BIqB,aCHlBC,IAASC,OAEP,kBAAC,EAAD,MAEAC,SAASC,eAAe,U","file":"static/js/main.d2c70987.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Section = ({ name, children }) => (\r\n  <section>\r\n    <h2>{name}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nexport default Section;\r\n","import React from 'react';\r\n\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport Section from '../section/Section';\r\nimport Notification from '../notification/Notification';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <Section name=\"Statistics\">\r\n    {total > 0 ? (\r\n      <div>\r\n        <p>Good: {good}</p>\r\n        <p>Neutral: {neutral}</p>\r\n        <p>Bad: {bad}</p>\r\n        <p>Total: {total}</p>\r\n        <p>Positive feedback: {positivePercentage}</p>\r\n      </div>\r\n    ) : (\r\n      <Notification message={'No feedback given'} />\r\n    )}\r\n  </Section>\r\n);\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\n\r\nconst Button = ({ name, onVote }) => (\r\n  <button className=\"buttonVote\" type=\"button\" onClick={() => onVote(name)}>\r\n    {name}\r\n  </button>\r\n);\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport Button from '../button/Button';\r\n\r\nconst FeedbackOptions = ({ buttonsName, onVote }) => {\r\n  return (\r\n    <div className=\"feedbackControls\">\r\n      {buttonsName.map((item) => (\r\n        <Button key={item} name={item} onVote={onVote} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.defaultProps = {\r\n  buttonsName: [],\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport Section from '../section/Section';\r\nimport FeedbackOptions from '../feedbackOptions/FeedbackOptions';\r\n\r\nconst Feedback = ({ buttonsName, onVote }) => (\r\n  <Section name=\"Please leave feedback\">\r\n    <FeedbackOptions buttonsName={buttonsName} onVote={onVote} />\r\n  </Section>\r\n);\r\n\r\nexport default Feedback;\r\n","import React, { Component } from 'react';\nimport Statistics from './components/statistics/Statistics';\nimport Feedback from './components/feedback/Feedback';\nimport './App.css';\n\nconst buttonsName = ['good', 'neutral', 'bad'];\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onVote = (name) =>\n    this.setState((prevState) => {\n      return { [name]: prevState[name] + 1 };\n    });\n\n  render() {\n    let total = 0;\n    for (let key in this.state) {\n      total = total + this.state[key];\n    }\n\n    const positivePercentage = Math.round((this.state.good / total) * 100);\n\n    return (\n      <div className=\"container\">\n        <div className=\"feedback\">\n          <Feedback buttonsName={buttonsName} onVote={this.onVote} />\n          <Statistics\n            good={this.state.good}\n            neutral={this.state.neutral}\n            bad={this.state.bad}\n            total={total}\n            positivePercentage={\n              isNaN(positivePercentage) ? '-' : `${positivePercentage}%`\n            }\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}